/* Copyright (C) 2017 Emil Albin Ryberg, Albert Sonne Olesen,
 * Nikolaj Binder Amtoft, Thomas Deuffic,
 * Benedek Gergály, Jonas Brødholt, Mads Riis Thomsen - All Rights Reserved
 *
 * You may use, distribute and modify this code under the
 * terms of the MIT license.
 *
 * chatterCallback functions contains code from
 * https://www.axistasoft.com/blog/poco/poco-net/item/sending-email-messages-using-poco-smtpclientsession-class
 *
 * Copyright (c) 2014 axistasoft.com.
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include </opt/ros/kinetic/include/std_msgs/Byte.h>
#include "ros/ros.h"
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <Poco/Net/MailMessage.h>
#include <Poco/Net/MailRecipient.h>
#include <Poco/Net/SMTPClientSession.h>
#include <Poco/Net/NetException.h>

using namespace std;
using namespace Poco::Net;
using namespace Poco;

void chatterCallback(const std_msgs::Byte::ConstPtr &msg)
{
  int intruder_detected = msg->data;

  string host = "localhost";
  UInt16 port = 1025;
  string user = "ridep1project@gmail.com";
  string password = "ThomasIsLate";
  string to = "ridep1project@gmail.com";
  string from = "ridep1project@gmail.com";
  string subject = "Intruder detected";
  subject = MailMessage::encodeWord(subject, "UTF-8");
  string content = "An intruder has been detected. Please apprehend the intruder.";
  MailMessage message;
  message.setSender(from);
  message.addRecipient(MailRecipient(MailRecipient::PRIMARY_RECIPIENT, to));
  message.setSubject(subject);
  message.setContentType("text/plain; charset=UTF-8");
  message.setContent(content, MailMessage::ENCODING_8BIT);

  if (intruder_detected == 1)
  {
    try
    {
      SMTPClientSession session(host, port);
      session.open();
      try
      {
        session.login(SMTPClientSession::AUTH_LOGIN, user, password);
        session.sendMessage(message);
        cout << "Message successfully sent" << endl;
        session.close();
      }
      catch (SMTPException &e)
      {
        cerr << e.displayText() << endl;
        session.close();
      }
    }
    catch (NetException &e)
    {
      cerr << e.displayText() << endl;
    }
  }
}

int main(int argc, char **argv)
{
  ros::init(argc, argv, "email_node");

  ros::NodeHandle nh;

  ros::Subscriber sub = nh.subscribe("email/send", 1000, chatterCallback);
  ros::spin();

  return 0;
}
